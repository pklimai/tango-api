syntax = "proto3";

package gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service;

option go_package = "gitlab.com/zigal0-group/nica/tango-api/internal/generated/api/tango_api_service;tango_api_service";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "tango-api";
    };
    host: "127.0.0.1:7000";
    external_docs: {
      url: "https://gitlab.com/zigal0-group/nica/tango-api";
      description: "API for tango-api application.";
    };
    schemes: [HTTP, HTTPS];
    consumes: "application/json";
    produces: "application/json";
};

service TangoApiService {
    // Get tango params by filter.
    rpc GetTangoParamsV1 (GetTangoParamsV1Request) returns (GetTangoParamsV1Response) {
        option (google.api.http) = {
            get: "/tango-api/v1/parameter",
        };
    }
}

// --------------- HANLDER TYPES ---------------

message GetTangoParamsV1Request {
    string system_name = 1 [json_name = "system_name", (validate.rules).string.min_len = 1];
    string parameter_name = 2 [json_name = "parameter_name", (validate.rules).string.min_len = 1];
    optional string member_name = 3 [json_name = "member_name", (validate.rules).string.min_len = 1];
    // format 1997-01-15 
    string start_time = 4 [json_name = "start_time", (validate.rules).string.pattern = "^\\d{2,4}\\-\\d{1,2}\\-\\d{1,2}$"];
    // format 1997-01-15 
    optional string end_time = 5 [json_name = "end_time", (validate.rules).string.pattern = "^\\d{2,4}\\-\\d{1,2}\\-\\d{1,2}$"];
}

message GetTangoParamsV1Response {
    ParamType param_type = 1 [json_name = "param_type"];
    repeated ScalarParam scalar_params = 2 [json_name = "scalar_params"];
    repeated ArrayParam array_parmas = 3 [json_name = "array_parmas"];

    message ScalarParam {
        string raw_value_r = 1 [json_name = "raw_value_r"]; 
        string raw_value_w = 2 [json_name = "raw_value_w"]; 
         // format 1997-01-15 20:16:28.000
        string data_time = 3 [json_name = "data_time"];
    }

    message ArrayParam {
        repeated string raw_values_r = 1 [json_name = "raw_values_r"]; 
        repeated string raw_values_w = 2 [json_name = "raw_values_w"];
        // format 1997-01-15 20:16:28.000
        string data_time = 3 [json_name = "data_time"];
    }

    enum ParamType {
        INVALID = 0;
        FLOAT32 = 1;
        FLOAT64 = 2;
        BOOL = 3;
        STRING = 4;
        INT8 = 5;
        INT16 = 6;
        INT32 = 7;
        INT64 = 8;
        UINT8 = 9;
        UINT16 = 10;
        UINT32 = 11;
        UINT64 = 12;
    }
}
