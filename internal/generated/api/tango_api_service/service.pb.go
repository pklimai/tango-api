// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.0
// source: tango_api_service/service.proto

package tango_api_service

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTangoParamsV1Response_ParamType int32

const (
	GetTangoParamsV1Response_INVALID GetTangoParamsV1Response_ParamType = 0
	GetTangoParamsV1Response_FLOAT32 GetTangoParamsV1Response_ParamType = 1
	GetTangoParamsV1Response_FLOAT64 GetTangoParamsV1Response_ParamType = 2
	GetTangoParamsV1Response_BOOL    GetTangoParamsV1Response_ParamType = 3
	GetTangoParamsV1Response_STRING  GetTangoParamsV1Response_ParamType = 4
	GetTangoParamsV1Response_INT8    GetTangoParamsV1Response_ParamType = 5
	GetTangoParamsV1Response_INT16   GetTangoParamsV1Response_ParamType = 6
	GetTangoParamsV1Response_INT32   GetTangoParamsV1Response_ParamType = 7
	GetTangoParamsV1Response_INT64   GetTangoParamsV1Response_ParamType = 8
	GetTangoParamsV1Response_UINT8   GetTangoParamsV1Response_ParamType = 9
	GetTangoParamsV1Response_UINT16  GetTangoParamsV1Response_ParamType = 10
	GetTangoParamsV1Response_UINT32  GetTangoParamsV1Response_ParamType = 11
	GetTangoParamsV1Response_UINT64  GetTangoParamsV1Response_ParamType = 12
)

// Enum value maps for GetTangoParamsV1Response_ParamType.
var (
	GetTangoParamsV1Response_ParamType_name = map[int32]string{
		0:  "INVALID",
		1:  "FLOAT32",
		2:  "FLOAT64",
		3:  "BOOL",
		4:  "STRING",
		5:  "INT8",
		6:  "INT16",
		7:  "INT32",
		8:  "INT64",
		9:  "UINT8",
		10: "UINT16",
		11: "UINT32",
		12: "UINT64",
	}
	GetTangoParamsV1Response_ParamType_value = map[string]int32{
		"INVALID": 0,
		"FLOAT32": 1,
		"FLOAT64": 2,
		"BOOL":    3,
		"STRING":  4,
		"INT8":    5,
		"INT16":   6,
		"INT32":   7,
		"INT64":   8,
		"UINT8":   9,
		"UINT16":  10,
		"UINT32":  11,
		"UINT64":  12,
	}
)

func (x GetTangoParamsV1Response_ParamType) Enum() *GetTangoParamsV1Response_ParamType {
	p := new(GetTangoParamsV1Response_ParamType)
	*p = x
	return p
}

func (x GetTangoParamsV1Response_ParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTangoParamsV1Response_ParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_tango_api_service_service_proto_enumTypes[0].Descriptor()
}

func (GetTangoParamsV1Response_ParamType) Type() protoreflect.EnumType {
	return &file_tango_api_service_service_proto_enumTypes[0]
}

func (x GetTangoParamsV1Response_ParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTangoParamsV1Response_ParamType.Descriptor instead.
func (GetTangoParamsV1Response_ParamType) EnumDescriptor() ([]byte, []int) {
	return file_tango_api_service_service_proto_rawDescGZIP(), []int{1, 0}
}

type GetTangoParamsV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemName    string  `protobuf:"bytes,1,opt,name=system_name,proto3" json:"system_name,omitempty"`
	ParameterName string  `protobuf:"bytes,2,opt,name=parameter_name,proto3" json:"parameter_name,omitempty"`
	MemberName    *string `protobuf:"bytes,3,opt,name=member_name,proto3,oneof" json:"member_name,omitempty"`
	// format 1997-01-15
	StartTime string `protobuf:"bytes,4,opt,name=start_time,proto3" json:"start_time,omitempty"`
	// format 1997-01-15
	EndTime *string `protobuf:"bytes,5,opt,name=end_time,proto3,oneof" json:"end_time,omitempty"`
}

func (x *GetTangoParamsV1Request) Reset() {
	*x = GetTangoParamsV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tango_api_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTangoParamsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTangoParamsV1Request) ProtoMessage() {}

func (x *GetTangoParamsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_tango_api_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTangoParamsV1Request.ProtoReflect.Descriptor instead.
func (*GetTangoParamsV1Request) Descriptor() ([]byte, []int) {
	return file_tango_api_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTangoParamsV1Request) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *GetTangoParamsV1Request) GetParameterName() string {
	if x != nil {
		return x.ParameterName
	}
	return ""
}

func (x *GetTangoParamsV1Request) GetMemberName() string {
	if x != nil && x.MemberName != nil {
		return *x.MemberName
	}
	return ""
}

func (x *GetTangoParamsV1Request) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetTangoParamsV1Request) GetEndTime() string {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return ""
}

type GetTangoParamsV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamType    GetTangoParamsV1Response_ParamType      `protobuf:"varint,1,opt,name=param_type,proto3,enum=gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response_ParamType" json:"param_type,omitempty"`
	ScalarParams []*GetTangoParamsV1Response_ScalarParam `protobuf:"bytes,2,rep,name=scalar_params,proto3" json:"scalar_params,omitempty"`
	ArrayParmas  []*GetTangoParamsV1Response_ArrayParam  `protobuf:"bytes,3,rep,name=array_parmas,proto3" json:"array_parmas,omitempty"`
}

func (x *GetTangoParamsV1Response) Reset() {
	*x = GetTangoParamsV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tango_api_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTangoParamsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTangoParamsV1Response) ProtoMessage() {}

func (x *GetTangoParamsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_tango_api_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTangoParamsV1Response.ProtoReflect.Descriptor instead.
func (*GetTangoParamsV1Response) Descriptor() ([]byte, []int) {
	return file_tango_api_service_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTangoParamsV1Response) GetParamType() GetTangoParamsV1Response_ParamType {
	if x != nil {
		return x.ParamType
	}
	return GetTangoParamsV1Response_INVALID
}

func (x *GetTangoParamsV1Response) GetScalarParams() []*GetTangoParamsV1Response_ScalarParam {
	if x != nil {
		return x.ScalarParams
	}
	return nil
}

func (x *GetTangoParamsV1Response) GetArrayParmas() []*GetTangoParamsV1Response_ArrayParam {
	if x != nil {
		return x.ArrayParmas
	}
	return nil
}

type GetTangoParamsV1Response_ScalarParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawValueR string `protobuf:"bytes,1,opt,name=raw_value_r,proto3" json:"raw_value_r,omitempty"`
	RawValueW string `protobuf:"bytes,2,opt,name=raw_value_w,proto3" json:"raw_value_w,omitempty"`
	// format 1997-01-15 20:16:28.000
	DataTime string `protobuf:"bytes,3,opt,name=data_time,proto3" json:"data_time,omitempty"`
}

func (x *GetTangoParamsV1Response_ScalarParam) Reset() {
	*x = GetTangoParamsV1Response_ScalarParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tango_api_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTangoParamsV1Response_ScalarParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTangoParamsV1Response_ScalarParam) ProtoMessage() {}

func (x *GetTangoParamsV1Response_ScalarParam) ProtoReflect() protoreflect.Message {
	mi := &file_tango_api_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTangoParamsV1Response_ScalarParam.ProtoReflect.Descriptor instead.
func (*GetTangoParamsV1Response_ScalarParam) Descriptor() ([]byte, []int) {
	return file_tango_api_service_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetTangoParamsV1Response_ScalarParam) GetRawValueR() string {
	if x != nil {
		return x.RawValueR
	}
	return ""
}

func (x *GetTangoParamsV1Response_ScalarParam) GetRawValueW() string {
	if x != nil {
		return x.RawValueW
	}
	return ""
}

func (x *GetTangoParamsV1Response_ScalarParam) GetDataTime() string {
	if x != nil {
		return x.DataTime
	}
	return ""
}

type GetTangoParamsV1Response_ArrayParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawValuesR []string `protobuf:"bytes,1,rep,name=raw_values_r,proto3" json:"raw_values_r,omitempty"`
	RawValuesW []string `protobuf:"bytes,2,rep,name=raw_values_w,proto3" json:"raw_values_w,omitempty"`
	// format 1997-01-15 20:16:28.000
	DataTime string `protobuf:"bytes,3,opt,name=data_time,proto3" json:"data_time,omitempty"`
}

func (x *GetTangoParamsV1Response_ArrayParam) Reset() {
	*x = GetTangoParamsV1Response_ArrayParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tango_api_service_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTangoParamsV1Response_ArrayParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTangoParamsV1Response_ArrayParam) ProtoMessage() {}

func (x *GetTangoParamsV1Response_ArrayParam) ProtoReflect() protoreflect.Message {
	mi := &file_tango_api_service_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTangoParamsV1Response_ArrayParam.ProtoReflect.Descriptor instead.
func (*GetTangoParamsV1Response_ArrayParam) Descriptor() ([]byte, []int) {
	return file_tango_api_service_service_proto_rawDescGZIP(), []int{1, 1}
}

func (x *GetTangoParamsV1Response_ArrayParam) GetRawValuesR() []string {
	if x != nil {
		return x.RawValuesR
	}
	return nil
}

func (x *GetTangoParamsV1Response_ArrayParam) GetRawValuesW() []string {
	if x != nil {
		return x.RawValuesW
	}
	return nil
}

func (x *GetTangoParamsV1Response_ArrayParam) GetDataTime() string {
	if x != nil {
		return x.DataTime
	}
	return ""
}

var File_tango_api_service_service_proto protoreflect.FileDescriptor

var file_tango_api_service_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x3c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69,
	0x67, 0x61, 0x6c, 0x30, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x6e, 0x69, 0x63, 0x61, 0x2e,
	0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61,
	0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x6e, 0x67, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x22, 0xfa, 0x42, 0x1f, 0x72, 0x1d, 0x32, 0x1b, 0x5e, 0x5c, 0x64, 0x7b, 0x32,
	0x2c, 0x34, 0x7d, 0x5c, 0x2d, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x32, 0x7d, 0x5c, 0x2d, 0x5c, 0x64,
	0x7b, 0x31, 0x2c, 0x32, 0x7d, 0x24, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xfa, 0x42, 0x1f, 0x72, 0x1d, 0x32, 0x1b, 0x5e, 0x5c, 0x64,
	0x7b, 0x32, 0x2c, 0x34, 0x7d, 0x5c, 0x2d, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x32, 0x7d, 0x5c, 0x2d,
	0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x32, 0x7d, 0x24, 0x48, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x06, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x67,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x80, 0x01, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x67, 0x61, 0x6c, 0x30, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x6e, 0x69, 0x63, 0x61, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x62, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x67, 0x61, 0x6c, 0x30,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x6e, 0x69, 0x63, 0x61, 0x2e, 0x74, 0x61, 0x6e, 0x67,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x6e, 0x67, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x0d, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x85, 0x01, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x6d, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x67, 0x61, 0x6c, 0x30, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x6e, 0x69, 0x63, 0x61, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x6d, 0x61, 0x73, 0x1a, 0x6f, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x77,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x61, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x72, 0x0a, 0x0a, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x77, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x5f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x61,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x77, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x61, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x77, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54,
	0x33, 0x32, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54, 0x38, 0x10,
	0x05, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x36, 0x34,
	0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x09, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e,
	0x54, 0x33, 0x32, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10,
	0x0c, 0x32, 0xf6, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x41, 0x70, 0x69, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e,
	0x67, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x12, 0x55, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x69, 0x67, 0x61, 0x6c, 0x30, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x6e, 0x69, 0x63, 0x61, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e,
	0x67, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x56, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x7a,
	0x69, 0x67, 0x61, 0x6c, 0x30, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x6e, 0x69, 0x63, 0x61,
	0x2e, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x6e, 0x67, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x42, 0xfe, 0x01, 0x92, 0x41, 0x97,
	0x01, 0x12, 0x0b, 0x0a, 0x09, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x1a, 0x0e,
	0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x37, 0x30, 0x30, 0x30, 0x2a, 0x02,
	0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x72, 0x50, 0x0a, 0x1e, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x20, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x12, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x67,
	0x61, 0x6c, 0x30, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x6e, 0x69, 0x63, 0x61, 0x2f, 0x74,
	0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x5a, 0x61, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x67, 0x61, 0x6c, 0x30, 0x2d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2f, 0x6e, 0x69, 0x63, 0x61, 0x2f, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x74, 0x61, 0x6e, 0x67, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tango_api_service_service_proto_rawDescOnce sync.Once
	file_tango_api_service_service_proto_rawDescData = file_tango_api_service_service_proto_rawDesc
)

func file_tango_api_service_service_proto_rawDescGZIP() []byte {
	file_tango_api_service_service_proto_rawDescOnce.Do(func() {
		file_tango_api_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tango_api_service_service_proto_rawDescData)
	})
	return file_tango_api_service_service_proto_rawDescData
}

var file_tango_api_service_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tango_api_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tango_api_service_service_proto_goTypes = []interface{}{
	(GetTangoParamsV1Response_ParamType)(0),      // 0: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ParamType
	(*GetTangoParamsV1Request)(nil),              // 1: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Request
	(*GetTangoParamsV1Response)(nil),             // 2: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response
	(*GetTangoParamsV1Response_ScalarParam)(nil), // 3: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ScalarParam
	(*GetTangoParamsV1Response_ArrayParam)(nil),  // 4: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ArrayParam
}
var file_tango_api_service_service_proto_depIdxs = []int32{
	0, // 0: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.param_type:type_name -> gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ParamType
	3, // 1: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.scalar_params:type_name -> gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ScalarParam
	4, // 2: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.array_parmas:type_name -> gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response.ArrayParam
	1, // 3: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.TangoApiService.GetTangoParamsV1:input_type -> gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Request
	2, // 4: gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.TangoApiService.GetTangoParamsV1:output_type -> gitlab.com.zigal0_group.nica.tango_api.api.tango_api_service.GetTangoParamsV1Response
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tango_api_service_service_proto_init() }
func file_tango_api_service_service_proto_init() {
	if File_tango_api_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tango_api_service_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTangoParamsV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tango_api_service_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTangoParamsV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tango_api_service_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTangoParamsV1Response_ScalarParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tango_api_service_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTangoParamsV1Response_ArrayParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tango_api_service_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tango_api_service_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tango_api_service_service_proto_goTypes,
		DependencyIndexes: file_tango_api_service_service_proto_depIdxs,
		EnumInfos:         file_tango_api_service_service_proto_enumTypes,
		MessageInfos:      file_tango_api_service_service_proto_msgTypes,
	}.Build()
	File_tango_api_service_service_proto = out.File
	file_tango_api_service_service_proto_rawDesc = nil
	file_tango_api_service_service_proto_goTypes = nil
	file_tango_api_service_service_proto_depIdxs = nil
}
